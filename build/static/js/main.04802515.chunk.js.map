{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Cryptocurrencies.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exchangesList","exchanges","map","exchange","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Option","Select","demoImage","News","setNewsCategory","cryptoNews","gutter","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","coins","coin","news","i","xs","sm","lg","hoverable","href","target","rel","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","change","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","includes","e","currency","extra","App","exact","path","style","color","textAlign","HeartFilled","LinkedinOutlined","MediumOutlined","InstagramOutlined","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.04802515.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React ,{useState, useEffect}from 'react'\r\nimport { Button, Menu, Typography, Avatar } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons'\r\nimport icon from '../images/cryptocurrency.png'\r\n\r\nconst Navbar = () => {\r\n\r\n    const [activeMenu, setActiveMenu] = useState(true)\r\n    const [screenSize, setScreenSize] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth)\r\n        window.addEventListener('resize', handleResize)\r\n        handleResize();\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    } , [])\r\n\r\n    useEffect(() => {\r\n        if(screenSize<768){\r\n            setActiveMenu(false)\r\n        }\r\n        else\r\n            setActiveMenu(true)\r\n    } , [screenSize])\r\n\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">CryptoCrowd</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={()=> setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined/>\r\n                </Button>\r\n                </div>\r\n                {activeMenu &&(\r\n                    <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined />}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n                )}\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n}\r\n\r\nconst baseUrl = process.env.REACT_APP_CRYPTO_API_URL;\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\r\n\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n    <div className=\"loader\">\r\n        <Spin />\r\n    </div>\r\n);\r\n\r\nexport default Loader;","import React from 'react'\r\nimport { Typography,Row, Col, Statistic } from 'antd'\r\nimport { Link } from 'react-router-dom';\r\nimport millify from 'millify'\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport {Cryptocurrencies, News} from '../components';\r\nimport Loader from './Loader'\r\n\r\nconst {Title} = Typography\r\n\r\nconst Homepage = () => {\r\n    const {data,isFetching} = useGetCryptosQuery(10)\r\n    const globalStats = data?.data?.stats; \r\n    \r\n    if(isFetching) return <Loader/>;\r\n    return (\r\n        <>\r\n            <Title level ={2} className=\"heading\">Global Crypto Statistics</Title>\r\n            <Row>\r\n                <Col span={12}> <Statistic  title=\"Total Cryptocurrencies\" value={globalStats.total} /> </Col>\r\n                <Col span={12}> <Statistic  title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /> </Col>\r\n                <Col span={12}> <Statistic  title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n                <Col span={12}> <Statistic  title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n                <Col span={12}> <Statistic  title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/> </Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptos In the world</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified/>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\r\n            </div>\r\n            <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                            <Panel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}.</strong></Text>\r\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                                    </Row>\r\n                                )}\r\n                            >\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Exchanges;","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n}\r\n\r\nconst baseUrl =process.env.REACT_APP_NEWS_API_URL;\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders })\r\n\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n})\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React, { useState } from 'react';\r\nimport { Select, Typography, Avatar, Row, Col, Card } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader'\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\r\n    const { data } = useGetCryptosQuery(100);\r\n\r\n    if (!cryptoNews?.value) return <Loader/>;\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a Crypto\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => setNewsCategory(value)}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100 ? news.description.substring(0, 100) + '...' : news.description}\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinPrice.push(coinHistory?.data?.history[i].price);\r\n    }\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price In USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd',\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LineChart;","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timeperiod, setTimeperiod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n                </Title>\r\n                <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n            </Col>\r\n            <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n                        <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n                        <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n                    {HTMLReactParser(cryptoDetails.description)}\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n                    {cryptoDetails.links?.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">{link.type}</Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default CryptoDetails;","import React, { useState ,useEffect } from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Input } from 'antd'\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\n\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n\r\n    const Count =simplified? 10:100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(Count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm,setSearchTerm ] = useState('');\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin)=>coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n        setCryptos(filteredData);\r\n    \r\n    } , [cryptosList,searchTerm]);\r\n\r\n    if(isFetching) return <Loader/>\r\n\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                <Input placeholder=\"Search Cryptocurrency\" onChange={(e)=> setSearchTerm(e.target.value)}/>\r\n            </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card\r\n                                title={`${currency.rank}. ${currency.name}`}\r\n                                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\r\n                                hoverable\r\n                            >\r\n                                <p>Price:{millify(currency.price)}</p>\r\n                                <p>Market Cap:{millify(currency.marketCap)}</p>\r\n                                <p>Daily Change:{millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd';\r\nimport { HeartFilled, LinkedinOutlined, MediumOutlined, InstagramOutlined } from '@ant-design/icons';\r\n\r\nimport { Exchanges, Homepage, News, Cryptocurrencies, CryptoDetails, Navbar } from './components';\r\nimport './App.css';\r\n\r\nconst App = () => (\r\n    <div className=\"app\">\r\n        <div className=\"navbar\">\r\n            <Navbar />\r\n        </div>\r\n        <div className=\"main\">\r\n            <Layout>\r\n                <div className=\"routes\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Homepage />\r\n                        </Route>\r\n                        <Route exact path=\"/exchanges\">\r\n                            <Exchanges />\r\n                        </Route>\r\n                        <Route exact path=\"/cryptocurrencies\">\r\n                            <Cryptocurrencies />\r\n                        </Route>\r\n                        <Route exact path=\"/crypto/:coinId\">\r\n                            <CryptoDetails />\r\n                        </Route>\r\n                        <Route exact path=\"/news\">\r\n                            <News />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Layout>\r\n            <div className=\"footer\">\r\n                <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021\r\n                    <Link to=\"/\">\r\n                        CryptoCrowd Inc.\r\n                    </Link> <br />\r\n                    Made By Prantik Mukherjee With <HeartFilled />\r\n                </Typography.Title>\r\n                <Space>\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link to=\"/exchanges\">Exchanges</Link>\r\n                    <Link to=\"/news\">News</Link>\r\n                </Space>\r\n                <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\r\n                <a href=\"https://www.linkedin.com/in/prantikmukherjee/\"><LinkedinOutlined /></a>\r\n                <a href=\"https://medium.com/@champmaniac\"><MediumOutlined /></a>\r\n                <a href=\"https://www.instagram.com/mukherjee_prantikk/\"><InstagramOutlined /></a>\r\n                </Typography.Title>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\r\n    },\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport store from './app/store';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);"],"sourceRoot":""}